# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: cheers_activity.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='cheers_activity.proto',
  package='pb',
  syntax='proto2',
  serialized_options=_b('Z\005../pb'),
  serialized_pb=_b('\n\x15\x63heers_activity.proto\x12\x02pb\"\x15\n\x13UseCheersScratchREQ\"M\n\x13UseCheersScratchRSP\x12\x0e\n\x06letter\x18\x01 \x01(\t\x12&\n\x04\x63ode\x18\x02 \x01(\x0e\x32\x18.pb.UseCheersScratchCode\"\x19\n\x17GetCheersScratchInfoREQ\"*\n\x0bUserScratch\x12\x0e\n\x06letter\x18\x01 \x01(\t\x12\x0b\n\x03num\x18\x02 \x01(\x05\"d\n\x17GetCheersScratchInfoRSP\x12\x1d\n\x04info\x18\x01 \x03(\x0b\x32\x0f.pb.UserScratch\x12*\n\x04\x63ode\x18\x02 \x01(\x0e\x32\x1c.pb.GetCheersScratchInfoCode\"\x17\n\x15UseCheersLuckyDrawREQ\"l\n\x15UseCheersLuckyDrawRSP\x12(\n\x04\x63ode\x18\x01 \x01(\x0e\x32\x1a.pb.UseCheersLuckyDrawCode\x12)\n\x06reward\x18\x02 \x01(\x0e\x32\x19.pb.CheersLuckyDrawReward*\xdc\x01\n\x14UseCheersScratchCode\x12*\n\x1dUSE_CHEERS_SCRATCH_CODE_ERROR\x10\xff\xff\xff\xff\xff\xff\xff\xff\xff\x01\x12 \n\x1cUSE_CHEERS_SCRATCH_CODE_NONE\x10\x00\x12#\n\x1fUSE_CHEERS_SCRATCH_CODE_SUCCESS\x10\x01\x12#\n\x1fUSE_CHEERS_SCRATCH_CODE_EXPIRED\x10\x02\x12,\n(USE_CHEERS_SCRATCH_CODE_INSUFFICIENT_NUM\x10\x03*\x9c\x01\n\x18GetCheersScratchInfoCode\x12/\n\"GET_CHEERS_SCRATCH_INFO_CODE_ERROR\x10\xff\xff\xff\xff\xff\xff\xff\xff\xff\x01\x12%\n!GET_CHEERS_SCRATCH_INFO_CODE_NONE\x10\x00\x12(\n$GET_CHEERS_SCRATCH_INFO_CODE_SUCCESS\x10\x01*\xed\x01\n\x16UseCheersLuckyDrawCode\x12-\n USE_CHEERS_LUCKY_DRAW_CODE_ERROR\x10\xff\xff\xff\xff\xff\xff\xff\xff\xff\x01\x12#\n\x1fUSE_CHEERS_LUCKY_DRAW_CODE_NONE\x10\x00\x12&\n\"USE_CHEERS_LUCKY_DRAW_CODE_SUCCESS\x10\x01\x12/\n+USE_CHEERS_LUCKY_DRAW_CODE_INSUFFICIENT_NUM\x10\x02\x12&\n\"USE_CHEERS_LUCKY_DRAW_CODE_EXPIRED\x10\x03*\x8a\x02\n\x15\x43heersLuckyDrawReward\x12!\n\x1d\x43HEERS_LUCKY_DRAW_REWARD_NONE\x10\x00\x12 \n\x1c\x43HEERS_LUCKY_DRAW_REWARD_ONE\x10\x01\x12 \n\x1c\x43HEERS_LUCKY_DRAW_REWARD_TWO\x10\x02\x12\"\n\x1e\x43HEERS_LUCKY_DRAW_REWARD_THREE\x10\x03\x12!\n\x1d\x43HEERS_LUCKY_DRAW_REWARD_FOUR\x10\x04\x12!\n\x1d\x43HEERS_LUCKY_DRAW_REWARD_FIVE\x10\x05\x12 \n\x1c\x43HEERS_LUCKY_DRAW_REWARD_SIX\x10\x06\x42\x07Z\x05../pb')
)

_USECHEERSSCRATCHCODE = _descriptor.EnumDescriptor(
  name='UseCheersScratchCode',
  full_name='pb.UseCheersScratchCode',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='USE_CHEERS_SCRATCH_CODE_ERROR', index=0, number=-1,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='USE_CHEERS_SCRATCH_CODE_NONE', index=1, number=0,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='USE_CHEERS_SCRATCH_CODE_SUCCESS', index=2, number=1,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='USE_CHEERS_SCRATCH_CODE_EXPIRED', index=3, number=2,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='USE_CHEERS_SCRATCH_CODE_INSUFFICIENT_NUM', index=4, number=3,
      serialized_options=None,
      type=None),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=440,
  serialized_end=660,
)
_sym_db.RegisterEnumDescriptor(_USECHEERSSCRATCHCODE)

UseCheersScratchCode = enum_type_wrapper.EnumTypeWrapper(_USECHEERSSCRATCHCODE)
_GETCHEERSSCRATCHINFOCODE = _descriptor.EnumDescriptor(
  name='GetCheersScratchInfoCode',
  full_name='pb.GetCheersScratchInfoCode',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='GET_CHEERS_SCRATCH_INFO_CODE_ERROR', index=0, number=-1,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='GET_CHEERS_SCRATCH_INFO_CODE_NONE', index=1, number=0,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='GET_CHEERS_SCRATCH_INFO_CODE_SUCCESS', index=2, number=1,
      serialized_options=None,
      type=None),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=663,
  serialized_end=819,
)
_sym_db.RegisterEnumDescriptor(_GETCHEERSSCRATCHINFOCODE)

GetCheersScratchInfoCode = enum_type_wrapper.EnumTypeWrapper(_GETCHEERSSCRATCHINFOCODE)
_USECHEERSLUCKYDRAWCODE = _descriptor.EnumDescriptor(
  name='UseCheersLuckyDrawCode',
  full_name='pb.UseCheersLuckyDrawCode',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='USE_CHEERS_LUCKY_DRAW_CODE_ERROR', index=0, number=-1,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='USE_CHEERS_LUCKY_DRAW_CODE_NONE', index=1, number=0,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='USE_CHEERS_LUCKY_DRAW_CODE_SUCCESS', index=2, number=1,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='USE_CHEERS_LUCKY_DRAW_CODE_INSUFFICIENT_NUM', index=3, number=2,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='USE_CHEERS_LUCKY_DRAW_CODE_EXPIRED', index=4, number=3,
      serialized_options=None,
      type=None),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=822,
  serialized_end=1059,
)
_sym_db.RegisterEnumDescriptor(_USECHEERSLUCKYDRAWCODE)

UseCheersLuckyDrawCode = enum_type_wrapper.EnumTypeWrapper(_USECHEERSLUCKYDRAWCODE)
_CHEERSLUCKYDRAWREWARD = _descriptor.EnumDescriptor(
  name='CheersLuckyDrawReward',
  full_name='pb.CheersLuckyDrawReward',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='CHEERS_LUCKY_DRAW_REWARD_NONE', index=0, number=0,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='CHEERS_LUCKY_DRAW_REWARD_ONE', index=1, number=1,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='CHEERS_LUCKY_DRAW_REWARD_TWO', index=2, number=2,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='CHEERS_LUCKY_DRAW_REWARD_THREE', index=3, number=3,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='CHEERS_LUCKY_DRAW_REWARD_FOUR', index=4, number=4,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='CHEERS_LUCKY_DRAW_REWARD_FIVE', index=5, number=5,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='CHEERS_LUCKY_DRAW_REWARD_SIX', index=6, number=6,
      serialized_options=None,
      type=None),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=1062,
  serialized_end=1328,
)
_sym_db.RegisterEnumDescriptor(_CHEERSLUCKYDRAWREWARD)

CheersLuckyDrawReward = enum_type_wrapper.EnumTypeWrapper(_CHEERSLUCKYDRAWREWARD)
USE_CHEERS_SCRATCH_CODE_ERROR = -1
USE_CHEERS_SCRATCH_CODE_NONE = 0
USE_CHEERS_SCRATCH_CODE_SUCCESS = 1
USE_CHEERS_SCRATCH_CODE_EXPIRED = 2
USE_CHEERS_SCRATCH_CODE_INSUFFICIENT_NUM = 3
GET_CHEERS_SCRATCH_INFO_CODE_ERROR = -1
GET_CHEERS_SCRATCH_INFO_CODE_NONE = 0
GET_CHEERS_SCRATCH_INFO_CODE_SUCCESS = 1
USE_CHEERS_LUCKY_DRAW_CODE_ERROR = -1
USE_CHEERS_LUCKY_DRAW_CODE_NONE = 0
USE_CHEERS_LUCKY_DRAW_CODE_SUCCESS = 1
USE_CHEERS_LUCKY_DRAW_CODE_INSUFFICIENT_NUM = 2
USE_CHEERS_LUCKY_DRAW_CODE_EXPIRED = 3
CHEERS_LUCKY_DRAW_REWARD_NONE = 0
CHEERS_LUCKY_DRAW_REWARD_ONE = 1
CHEERS_LUCKY_DRAW_REWARD_TWO = 2
CHEERS_LUCKY_DRAW_REWARD_THREE = 3
CHEERS_LUCKY_DRAW_REWARD_FOUR = 4
CHEERS_LUCKY_DRAW_REWARD_FIVE = 5
CHEERS_LUCKY_DRAW_REWARD_SIX = 6



_USECHEERSSCRATCHREQ = _descriptor.Descriptor(
  name='UseCheersScratchREQ',
  full_name='pb.UseCheersScratchREQ',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=29,
  serialized_end=50,
)


_USECHEERSSCRATCHRSP = _descriptor.Descriptor(
  name='UseCheersScratchRSP',
  full_name='pb.UseCheersScratchRSP',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='letter', full_name='pb.UseCheersScratchRSP.letter', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='code', full_name='pb.UseCheersScratchRSP.code', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=-1,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=52,
  serialized_end=129,
)


_GETCHEERSSCRATCHINFOREQ = _descriptor.Descriptor(
  name='GetCheersScratchInfoREQ',
  full_name='pb.GetCheersScratchInfoREQ',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=131,
  serialized_end=156,
)


_USERSCRATCH = _descriptor.Descriptor(
  name='UserScratch',
  full_name='pb.UserScratch',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='letter', full_name='pb.UserScratch.letter', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='num', full_name='pb.UserScratch.num', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=158,
  serialized_end=200,
)


_GETCHEERSSCRATCHINFORSP = _descriptor.Descriptor(
  name='GetCheersScratchInfoRSP',
  full_name='pb.GetCheersScratchInfoRSP',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='info', full_name='pb.GetCheersScratchInfoRSP.info', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='code', full_name='pb.GetCheersScratchInfoRSP.code', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=-1,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=202,
  serialized_end=302,
)


_USECHEERSLUCKYDRAWREQ = _descriptor.Descriptor(
  name='UseCheersLuckyDrawREQ',
  full_name='pb.UseCheersLuckyDrawREQ',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=304,
  serialized_end=327,
)


_USECHEERSLUCKYDRAWRSP = _descriptor.Descriptor(
  name='UseCheersLuckyDrawRSP',
  full_name='pb.UseCheersLuckyDrawRSP',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='code', full_name='pb.UseCheersLuckyDrawRSP.code', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=-1,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='reward', full_name='pb.UseCheersLuckyDrawRSP.reward', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=329,
  serialized_end=437,
)

_USECHEERSSCRATCHRSP.fields_by_name['code'].enum_type = _USECHEERSSCRATCHCODE
_GETCHEERSSCRATCHINFORSP.fields_by_name['info'].message_type = _USERSCRATCH
_GETCHEERSSCRATCHINFORSP.fields_by_name['code'].enum_type = _GETCHEERSSCRATCHINFOCODE
_USECHEERSLUCKYDRAWRSP.fields_by_name['code'].enum_type = _USECHEERSLUCKYDRAWCODE
_USECHEERSLUCKYDRAWRSP.fields_by_name['reward'].enum_type = _CHEERSLUCKYDRAWREWARD
DESCRIPTOR.message_types_by_name['UseCheersScratchREQ'] = _USECHEERSSCRATCHREQ
DESCRIPTOR.message_types_by_name['UseCheersScratchRSP'] = _USECHEERSSCRATCHRSP
DESCRIPTOR.message_types_by_name['GetCheersScratchInfoREQ'] = _GETCHEERSSCRATCHINFOREQ
DESCRIPTOR.message_types_by_name['UserScratch'] = _USERSCRATCH
DESCRIPTOR.message_types_by_name['GetCheersScratchInfoRSP'] = _GETCHEERSSCRATCHINFORSP
DESCRIPTOR.message_types_by_name['UseCheersLuckyDrawREQ'] = _USECHEERSLUCKYDRAWREQ
DESCRIPTOR.message_types_by_name['UseCheersLuckyDrawRSP'] = _USECHEERSLUCKYDRAWRSP
DESCRIPTOR.enum_types_by_name['UseCheersScratchCode'] = _USECHEERSSCRATCHCODE
DESCRIPTOR.enum_types_by_name['GetCheersScratchInfoCode'] = _GETCHEERSSCRATCHINFOCODE
DESCRIPTOR.enum_types_by_name['UseCheersLuckyDrawCode'] = _USECHEERSLUCKYDRAWCODE
DESCRIPTOR.enum_types_by_name['CheersLuckyDrawReward'] = _CHEERSLUCKYDRAWREWARD
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

UseCheersScratchREQ = _reflection.GeneratedProtocolMessageType('UseCheersScratchREQ', (_message.Message,), dict(
  DESCRIPTOR = _USECHEERSSCRATCHREQ,
  __module__ = 'cheers_activity_pb2'
  # @@protoc_insertion_point(class_scope:pb.UseCheersScratchREQ)
  ))
_sym_db.RegisterMessage(UseCheersScratchREQ)

UseCheersScratchRSP = _reflection.GeneratedProtocolMessageType('UseCheersScratchRSP', (_message.Message,), dict(
  DESCRIPTOR = _USECHEERSSCRATCHRSP,
  __module__ = 'cheers_activity_pb2'
  # @@protoc_insertion_point(class_scope:pb.UseCheersScratchRSP)
  ))
_sym_db.RegisterMessage(UseCheersScratchRSP)

GetCheersScratchInfoREQ = _reflection.GeneratedProtocolMessageType('GetCheersScratchInfoREQ', (_message.Message,), dict(
  DESCRIPTOR = _GETCHEERSSCRATCHINFOREQ,
  __module__ = 'cheers_activity_pb2'
  # @@protoc_insertion_point(class_scope:pb.GetCheersScratchInfoREQ)
  ))
_sym_db.RegisterMessage(GetCheersScratchInfoREQ)

UserScratch = _reflection.GeneratedProtocolMessageType('UserScratch', (_message.Message,), dict(
  DESCRIPTOR = _USERSCRATCH,
  __module__ = 'cheers_activity_pb2'
  # @@protoc_insertion_point(class_scope:pb.UserScratch)
  ))
_sym_db.RegisterMessage(UserScratch)

GetCheersScratchInfoRSP = _reflection.GeneratedProtocolMessageType('GetCheersScratchInfoRSP', (_message.Message,), dict(
  DESCRIPTOR = _GETCHEERSSCRATCHINFORSP,
  __module__ = 'cheers_activity_pb2'
  # @@protoc_insertion_point(class_scope:pb.GetCheersScratchInfoRSP)
  ))
_sym_db.RegisterMessage(GetCheersScratchInfoRSP)

UseCheersLuckyDrawREQ = _reflection.GeneratedProtocolMessageType('UseCheersLuckyDrawREQ', (_message.Message,), dict(
  DESCRIPTOR = _USECHEERSLUCKYDRAWREQ,
  __module__ = 'cheers_activity_pb2'
  # @@protoc_insertion_point(class_scope:pb.UseCheersLuckyDrawREQ)
  ))
_sym_db.RegisterMessage(UseCheersLuckyDrawREQ)

UseCheersLuckyDrawRSP = _reflection.GeneratedProtocolMessageType('UseCheersLuckyDrawRSP', (_message.Message,), dict(
  DESCRIPTOR = _USECHEERSLUCKYDRAWRSP,
  __module__ = 'cheers_activity_pb2'
  # @@protoc_insertion_point(class_scope:pb.UseCheersLuckyDrawRSP)
  ))
_sym_db.RegisterMessage(UseCheersLuckyDrawRSP)


DESCRIPTOR._options = None
# @@protoc_insertion_point(module_scope)
